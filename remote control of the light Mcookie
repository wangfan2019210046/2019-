#include <Microduino_ColorLED.h> //引用彩灯库
#define LED_NUM 1                 //定义彩灯数量
#define PIN_LED 6                 //定义彩灯端口号
#include <avr/sleep.h>
#include <avr/power.h>
#include <IRremote.h>
#include <U8glib.h>
IRsend irsend;

int RECV_PIN = 10;
IRrecv irrecv(RECV_PIN);
decode_results results;
ColorLED strip = ColorLED(LED_NUM, PIN_LED);  //定义彩灯数量、彩灯引脚号，色彩编码格式缺省配置（默认为：NEO_GRB + NEO_KHZ800）
#define INTERVAL_LCD             20             //定义OLED刷新时间间隔  
unsigned long lcd_time = millis();                 //OLED刷新时间计时器
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);     //设置OLED型号
//-------字体设置，大、中、小
#define setFont_L u8g.setFont(u8g_font_7x13)
#define setFont_M u8g.setFont(u8g_font_fixed_v0r)
#define setFont_S u8g.setFont(u8g_font_fixed_v0r)
#define setFont_SS u8g.setFont(u8g_font_fub25n)

int pin2 = 2;//触摸开关接D2

long previousMillis = 0;        // 存储LED最后一次的更新
long interval = 5000;           // 闪烁的时间间隔（毫秒）
unsigned long currentMillis = 0;
void setup() {
  Serial.begin(9600);//初始化串口
  /* Setup the pin direction. */
  pinMode(pin2, INPUT);//设置端口模式为输入
  irrecv.enableIRIn(); // 启动红外解码
  Serial.println("Initialisation complete.");
  strip.begin();      //彩灯初始化
  strip.setBrightness(50); //设置彩灯亮度
  strip.show();      //将彩灯点亮成设置的颜色

  strip.setPixelColor(0,  strip.Color(0, 0, 0)); //设置第0号灯为wuse
  strip.show();      //将彩灯点亮成设置的颜色
  u8g.firstPage();//u8glib规定的写法
  do {
    setFont_L;
    u8g.setPrintPos(4, 16);//设置打印位置
    //for (int i = 0; i < 3; i++) {
    u8g.print("HELLO");
  } while ( u8g.nextPage() ); //u8glib规定的写法
}

/***************************************************
    Name:        loop
    Returns:     Nothing.
    Parameters:  None.
    Description: Main application loop.
 ***************************************************/
//int ch[3] = {3, 0, 7}
bool flag = 0;
void loop() {
  currentMillis = millis();//读取系统计时器
  Serial.print("Awake for ");
  Serial.print(currentMillis - previousMillis, DEC);//计算清醒时间
  Serial.println(" second");
  delay(1000);

  if (irrecv.decode(&results)) {
    Serial.println(results.va
